var assert=require("assert"),http=require("http");var server=http.createServer(function(b,c){if(b.method==="GET"){if(b.url==="/delay"){setTimeout(function(){c.writeHead(200,{});c.end("delayed")},200)}else{var a=JSON.stringify({name:"tj"});c.writeHead(200,{"Content-Type":"application/json; charset=utf8","Content-Length":a.length});c.end(a)}}else{var a="";b.setEncoding("utf8");b.addListener("data",function(d){a+=d});b.addListener("end",function(){c.writeHead(200,{});c.end(b.url+" "+a)})}});var delayedServer=http.createServer(function(a,b){b.writeHead(200);b.end("it worked")});var oldListen=delayedServer.listen;delayedServer.listen=function(){var a=arguments;setTimeout(function(){oldListen.apply(delayedServer,a)},100)};module.exports={"test assert.response()":function(a){var b=0;assert.response(server,{url:"/",method:"GET"},{body:'{"name":"tj"}',status:200,headers:{"Content-Type":"application/json; charset=utf8"}});assert.response(server,{url:"/foo",method:"POST",data:"bar baz"},{body:"/foo bar baz",status:200},function(c){++b;assert.ok(c)});assert.response(server,{url:"/foo"},function(c){++b;assert.ok(c.body.indexOf("tj")>=0,"Test assert.response() callback")});assert.response(server,{url:"/delay",timeout:300},{body:"delayed"});a(function(){assert.equal(2,b)})},"test assert.response() regexp":function(){assert.response(server,{url:"/foo",method:"POST",data:"foobar"},{body:/^\/foo foo(bar)?/})},"test assert.response() regexp headers":function(){assert.response(server,{url:"/"},{body:'{"name":"tj"}',headers:{"Content-Type":/^application\/json/}})},"test assert.response() with deferred listen()":function(){assert.response(delayedServer,{url:"/"},{body:"it worked"})}};