/*
 * Module dependencies.
 */
var Schema=require("./schema"),SchemaType=require("./schematype"),VirtualType=require("./virtualtype"),SchemaTypes=Schema.Types,SchemaDefaults=require("./schemadefault"),Types=require("./types"),Query=require("./query"),Promise=require("./promise"),Model=require("./model"),Document=require("./document"),utils=require("./utils"),format=utils.toCollectionName,mongodb=require("mongodb");function Mongoose(){this.connections=[];this.plugins=[];this.models={};this.modelSchemas={};this.options={};this.createConnection()}Mongoose.prototype.set=function(a,b){if(arguments.length==1){return this.options[a]}this.options[a]=b;return this};Mongoose.prototype.get=Mongoose.prototype.set;
/*
 * ReplSet connection string check.
 */
var rgxReplSet=/^.+,.+$/;Mongoose.prototype.createConnection=function(){var a=new Connection(this);this.connections.push(a);if(arguments.length){if(rgxReplSet.test(arguments[0])){a.openSet.apply(a,arguments)}else{a.open.apply(a,arguments)}}return a};Mongoose.prototype.connect=function(){var a=this.connection;if(rgxReplSet.test(arguments[0])){a.openSet.apply(a,arguments)}else{a.open.apply(a,arguments)}return this};Mongoose.prototype.disconnect=function(c){var a=this.connections.length,b;this.connections.forEach(function(d){d.close(function(e){if(b){return}if(e){b=e;if(c){return c(e)}throw e}if(c){--a||c()}})});return this};Mongoose.prototype.model=function(e,f,a,g){if(!(f instanceof Schema)){a=f;f=false}if("boolean"===typeof a){g=a;a=null}if(!this.modelSchemas[e]){if(!f&&e in SchemaDefaults){f=SchemaDefaults[e]}if(f){this.modelSchemas[e]=f;for(var b=0,c=this.plugins.length;b<c;b++){f.plugin(this.plugins[b][0],this.plugins[b][1])}}else{throw new Error("Schema hasn't been registered for model \""+e+'".\nUse mongoose.model(name, schema)')}}if(!this.models[e]){f||(f=this.modelSchemas[e]);a||(a=f.set("collection")||format(e));var d=Model.compile(e,this.modelSchemas[e],a,this.connection,this);if(!g){d.init()}this.models[e]=d}return this.models[e]};Mongoose.prototype.plugin=function(a,b){this.plugins.push([a,b]);return this};Mongoose.prototype.__defineGetter__("connection",function(){return this.connections[0]});
/*
 * Driver depentend APIs
 */
var driver=global.MONGOOSE_DRIVER_PATH||"./drivers/node-mongodb-native";
/*
 * Connection
 */
var Connection=require(driver+"/connection");
/*
 * Collection
 */
var Collection=require(driver+"/collection");module.exports=exports=new Mongoose;var mongoose=module.exports;mongoose.Collection=Collection;mongoose.Connection=Connection;mongoose.version=JSON.parse(require("fs").readFileSync(__dirname+"/../package.json","utf8")).version;mongoose.Mongoose=Mongoose;mongoose.Schema=Schema;mongoose.SchemaType=SchemaType;mongoose.VirtualType=VirtualType;mongoose.Types=Types;mongoose.Query=Query;mongoose.Promise=Promise;mongoose.Model=Model;mongoose.Document=Document;mongoose.Error=require("./error");mongoose.mongo=require("mongodb");