/*
 * Module dependencies.
 */
var MongooseConnection=require("../../connection"),mongo=require("mongodb"),Server=mongo.Server,STATES=require("../../connectionstate"),ReplSetServers=mongo.ReplSetServers;function NativeConnection(){MongooseConnection.apply(this,arguments)}
/*
 * Inherits from Connection.
 */
NativeConnection.prototype.__proto__=MongooseConnection.prototype;NativeConnection.prototype.doOpen=function(a){var c,b=this;if(!this.db){c=new mongo.Server(this.host,Number(this.port),this.options.server);this.db=new mongo.Db(this.name,c,this.options.db)}this.db.open(function(d){if(d){return a(d)}a();listen(b)});return this};function listen(a){if(a._listening){return}a._listening=true;a.db.on("close",function(){if(a._closeCalled){return}if(a.options.server.auto_reconnect){a.readyState=STATES.disconnected;a.emit("close");return}a.onClose()});a.db.on("error",function(b){a.emit("error",b)});a.db.on("timeout",function(b){var c=new Error(b&&b.err||"connection timeout");a.emit("error",c)});a.db.on("open",function(){a.emit("reconnected")});a.db.on("fullsetup",function(){a.emit("fullsetup")})}NativeConnection.prototype.doOpenSet=function(a){if(!this.db){var e=[],b=this.port,c=this;this.host.forEach(function(f,g){e.push(new mongo.Server(f,Number(b[g]),c.options.server))});var d=new ReplSetServers(e,this.options.replset);this.db=new mongo.Db(this.name,d,this.options.db);listen(this)}this.db.open(a);return this};NativeConnection.prototype.doClose=function(a){this.db.close();if(a){a()}return this}
/*
 * Module exports.
 */
;module.exports=NativeConnection;