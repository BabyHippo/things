/*
 * Module dependencies.
 */
var MongooseArray=require("./array"),driver=global.MONGOOSE_DRIVER_PATH||"../drivers/node-mongodb-native",ObjectId=require(driver+"/objectid"),ObjectIdSchema=require("../schema/objectid"),util=require("util");function MongooseDocumentArray(d,c,b){var a=[];a.push.apply(a,d);a.__proto__=MongooseDocumentArray.prototype;a._atomics={};a.validators=[];a._path=c;if(b){a._parent=b;a._schema=b.schema.path(c);b.on("save",a.notify("save"));b.on("isNew",a.notify("isNew"))}return a}
/*
 * Inherits from MongooseArray
 */
MongooseDocumentArray.prototype.__proto__=MongooseArray.prototype;MongooseDocumentArray.prototype._cast=function(b){var a=new this._schema.casterConstructor(b,this);return a};MongooseDocumentArray.prototype.id=function(f){var b,a;try{b=ObjectId.toString(ObjectIdSchema.prototype.cast.call({},f))}catch(c){b=null}for(var d=0,g=this.length;d<g;d++){a=this[d].get("_id");if(!(a instanceof ObjectId)){if(String(f)==a){return this[d]}}else{if(b==a){return this[d]}}}return null};MongooseDocumentArray.prototype.toObject=function(){return this.map(function(a){return a&&a.toObject()||null})};MongooseDocumentArray.prototype.inspect=function(){return"["+this.map(function(a){if(a){return a.inspect?a.inspect():util.inspect(a)}return"null"}).join("\n")+"]"};MongooseDocumentArray.prototype.create=function(a){return new this._schema.casterConstructor(a)};MongooseDocumentArray.prototype.notify=function notify(a){var c=this;return function b(e){var d=c.length;while(d--){c[d].emit(a,e)}}}
/*
 * Module exports.
 */
;module.exports=MongooseDocumentArray;