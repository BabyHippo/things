/*
 * Module dependencies.
 */
var url=require("url"),utils=require("./utils"),EventEmitter=utils.EventEmitter,driver=global.MONGOOSE_DRIVER_PATH||"./drivers/node-mongodb-native",Model=require("./model"),Schema=require("./schema"),Collection=require(driver+"/collection"),STATES=require("./connectionstate"),assert=require("assert")
/*
 * Protocol prefix regexp.
 *
 * @api private
 */
;var rgxProtocol=/^(?:.)+:\/\//;function Connection(a){this.base=a;this.collections={};this.models={};this.replica=false;this.host=null;this.port=null;this.user=null;this.pass=null;this.name=null;this.options=null;this._readyState=STATES.disconnected;this._closeCalled=false;this._hasOpened=false}
/*
 * Inherit from EventEmitter
 */
Connection.prototype.__proto__=EventEmitter.prototype;Object.defineProperty(Connection.prototype,"readyState",{get:function(){return this._readyState},set:function(a){if(!(a in STATES)){throw new Error("Invalid connection state: "+a)}if(this._readyState!==a){this._readyState=a;if(STATES.connected===a){this._hasOpened=true}this.emit(STATES[a])}}});Connection.prototype.collections;Connection.prototype.db;Connection.prototype.open=function(e,c,g,f,b){var h=this,i;if("string"===typeof c){switch(arguments.length){case 2:g=27017;case 3:switch(typeof g){case"function":b=g,g=27017;break;case"object":f=g,g=27017;break}break;case 4:if("function"===typeof f){b=f,f={}}}}else{switch(typeof c){case"function":b=c,c=undefined;break;case"object":f=c;c=undefined;b=g;break}if(!rgxProtocol.test(e)){e="mongodb://"+e}i=url.parse(e);e=i.hostname;g=i.port||27017;c=i.pathname&&i.pathname.replace(/\//g,"")}this.options=this.defaultOptions(f);if(STATES.disconnected!==this.readyState){var d=new Error("Trying to open unclosed connection.");d.state=this.readyState;this.error(d,b);return this}if(!e){this.error(new Error("Missing connection hostname."),b);return this}if(!c){this.error(new Error("Missing connection database."),b);return this}if(i&&i.auth){var a=i.auth.split(":");this.user=a[0];this.pass=a[1]}else{if(/@/.test(e)&&/:/.test(e.split("@")[0])){e=e.split("@");var a=e.shift().split(":");e=e.pop();this.user=a[0];this.pass=a[1]}else{if(f&&f.user&&f.pass){this.user=f.user;this.pass=f.pass}else{this.user=this.pass=undefined}}}this.name=c;this.host=e;this.port=g;this._open(b);return this};Connection.prototype.openSet=function(e,b,c,a){var e=e.split(","),d=this;switch(arguments.length){case 3:this.name=b;if("function"===typeof c){a=c,c={}}break;case 2:switch(typeof b){case"string":this.name=b;case"function":a=b,b=null;break;case"object":c=b,b=null;break}}this.options=c=this.defaultOptions(c);if(e.length<2){this.error(new Error("Please provide comma-separated URIs"),a);return this}this.replica=true;this.host=[];this.port=[];e.forEach(function(g){if(!rgxProtocol.test(g)){g="mongodb://"+g}var g=url.parse(g);d.host.push(g.hostname);d.port.push(g.port||27017);if(!d.name&&g.pathname&&g.pathname.replace(/\//g,"")){d.name=g.pathname.replace(/\//g,"")}if(!d.user&&g.auth){var f=g.auth.split(":");d.user=f[0];d.pass=f[1]}});if(!this.name){this.error(new Error("No database name provided for replica set"),a);return this}this._open(a);return this};Connection.prototype.error=function(b,a){if(a){return a(b)}this.emit("error",b)};Connection.prototype._open=function(a){this.readyState=STATES.connecting;this._closeCalled=false;var c=this;var b=this.replica?"doOpenSet":"doOpen";this[b](function(d){if(d){c.readyState=STATES.disconnected;if(c._hasOpened){if(a){a(d)}}else{c.error(d,a)}return}c.onOpen();a&&a()})};Connection.prototype.onOpen=function(){var b=this;function a(){b.readyState=STATES.connected;for(var c in b.collections){b.collections[c].onOpen()}b.emit("open")}if(b.user&&b.pass){b.db.authenticate(b.user,b.pass,a)}else{a()}};Connection.prototype.close=function(a){var b=this;this._closeCalled=true;switch(this.readyState){case 0:a&&a();break;case 1:this.readyState=STATES.disconnecting;this.doClose(function(c){if(c){b.error(c,a)}else{b.onClose();a&&a()}});break;case 2:this.once("open",function(){b.close(a)});break;case 3:if(!a){break}this.once("close",function(){a()});break}return this};Connection.prototype.onClose=function(){this.readyState=STATES.disconnected;for(var a in this.collections){this.collections[a].onClose()}this.emit("close")};Connection.prototype.collection=function(a,b){if(!(a in this.collections)){this.collections[a]=new Collection(a,this,b)}return this.collections[a]};Connection.prototype.model=function(d,f,a){if(!this.models[d]){var b=this.base.model(d,f,a,true),c;if(this!=b.prototype.db){c=function c(g,h,i){if(!(this instanceof c)){return new c(g,h,i)}b.call(this,g,h,i)};c.__proto__=b;c.prototype.__proto__=b.prototype;c.db=c.prototype.db=this;if("string"===typeof f){a=f}if(!a){a=b.prototype.schema.set("collection")||utils.toCollectionName(d)}var e="string"!=typeof f?f:b.prototype.schema;c.prototype.collection=this.collection(a,e&&e.options.capped);c.collection=c.prototype.collection;c.init()}this.models[d]=c||b}return this.models[d]};Connection.prototype.setProfiling=function(c,d,a){if(STATES.connected!==this.readyState){return this.on("open",this.setProfiling.bind(this,c,d,a))}if(!a){a=d,d=100}var b={};switch(c){case 0:case"off":b.profile=0;break;case 1:case"slow":b.profile=1;if("number"!==typeof d){d=parseInt(d,10);if(isNaN(d)){d=100}}b.slowms=d;break;case 2:case"all":b.profile=2;break;default:return a(new Error("Invalid profiling level: "+c))}this.db.executeDbCommand(b,function(f,g){if(f){return a(f)}var e=g.documents[0];f=1===e.ok?null:new Error("Could not set profiling level to: "+c);a(f,e)})};Connection.prototype.defaultOptions=function(b){var a=b||{};a.server=a.server||{};if(!("auto_reconnect" in a.server)){a.server.auto_reconnect=true}a.db=a.db||{};a.db.forceServerObjectId=false;return a}
/*
 * Noop.
 */
;function noop(){}
/*
 * Module exports.
 */
Connection.STATES=STATES;module.exports=Connection;