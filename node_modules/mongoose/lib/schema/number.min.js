/*
 * Module requirements.
 */
var SchemaType=require("../schematype"),CastError=SchemaType.CastError;function SchemaNumber(a,b){SchemaType.call(this,a,b,"Number")}
/*
 * Inherits from SchemaType.
 */
SchemaNumber.prototype.__proto__=SchemaType.prototype;SchemaNumber.prototype.checkRequired=function checkRequired(a){if(SchemaType._isRef(this,a,true)){return null!=a}else{return typeof a=="number"||a instanceof Number}};SchemaNumber.prototype.min=function(b,a){if(this.minValidator){this.validators=this.validators.filter(function(c){return c[1]!="min"})}if(b!=null){this.validators.push([function(c){return c===null||c>=b},"min"])}return this};SchemaNumber.prototype.max=function(b,a){if(this.maxValidator){this.validators=this.validators.filter(function(c){return c[1]!="max"})}if(b!=null){this.validators.push([this.maxValidator=function(c){return c===null||c<=b},"max"])}return this};SchemaNumber.prototype.cast=function(c,a,b){if(SchemaType._isRef(this,c,b)){return c}if(!isNaN(c)){if(null===c){return c}if(""===c){return null}if("string"==typeof c){c=Number(c)}if(c instanceof Number){return c}if("number"==typeof c){return c}if(c.toString&&!Array.isArray(c)&&c.toString()==Number(c)){return new Number(c)}}throw new CastError("number",c)};
/*
 * ignore
 */
function handleSingle(a){return this.cast(a)}function handleArray(b){var a=this;return b.map(function(c){return a.cast(c)})}SchemaNumber.prototype.$conditionalHandlers={"$lt":handleSingle,"$lte":handleSingle,"$gt":handleSingle,"$gte":handleSingle,"$ne":handleSingle,"$in":handleArray,"$nin":handleArray,"$mod":handleArray,"$all":handleArray};SchemaNumber.prototype.castForQuery=function(a,c){var b;if(arguments.length===2){b=this.$conditionalHandlers[a];if(!b){throw new Error("Can't use "+a+" with Number.")}return b.call(this,c)}else{c=this.cast(a);return c==null?c:c}};
/*
 * Module exports.
 */
module.exports=SchemaNumber;