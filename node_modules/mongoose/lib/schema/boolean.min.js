/*
 * Module dependencies.
 */
var SchemaType=require("../schematype");function SchemaBoolean(b,a){SchemaType.call(this,b,a)}
/*
 * Inherits from SchemaType.
 */
SchemaBoolean.prototype.__proto__=SchemaType.prototype;SchemaBoolean.prototype.checkRequired=function(a){return a===true||a===false};SchemaBoolean.prototype.cast=function(a){if(a===null){return a}if(a==="0"){return false}return !!a};
/*
 * ignore
 */
function handleArray(b){var a=this;return b.map(function(c){return a.cast(c)})}SchemaBoolean.$conditionalHandlers={"$in":handleArray};SchemaBoolean.prototype.castForQuery=function(a,c){var b;if(2===arguments.length){b=SchemaBoolean.$conditionalHandlers[a];if(!b){throw new Error("Can't use "+a+" with Boolean.")}return b.call(this,c)}return this.cast(a)};
/*
 * Module exports.
 */
module.exports=SchemaBoolean;