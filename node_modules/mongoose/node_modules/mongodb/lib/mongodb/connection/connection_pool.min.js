var utils=require("./connection_utils"),inherits=require("util").inherits,net=require("net"),EventEmitter=require("events").EventEmitter,inherits=require("util").inherits,MongoReply=require("../responses/mongo_reply").MongoReply,Connection=require("./connection").Connection;var ConnectionPool=exports.ConnectionPool=function(b,d,c,a,e){if(typeof b!=="string"||typeof d!=="number"){throw"host and port must be specified ["+b+":"+d+"]"}EventEmitter.call(this);this.socketOptions=typeof e==="object"?e:{};this.socketOptions.host=b;this.socketOptions.port=d;this.bson=a;this.poolSize=c;this.minPoolSize=Math.floor(this.poolSize/2)+1;utils.setIntegerParameter(this.socketOptions,"timeout",0);utils.setBooleanParameter(this.socketOptions,"noDelay",true);utils.setIntegerParameter(this.socketOptions,"keepAlive",0);utils.setStringParameter(this.socketOptions,"encoding",null);utils.setIntegerParameter(this.socketOptions,"bufferSize",0);this.openConnections=[];this.connectionId=0;this.currentConnectionIndex=0;this._poolState="disconnected";this._timeout=false};inherits(ConnectionPool,EventEmitter);ConnectionPool.prototype.setMaxBsonSize=function(b){if(b==null){b=Connection.DEFAULT_MAX_BSON_SIZE}for(var a=0;a<this.openConnections.length;a++){this.openConnections[a].maxBsonSize=b}};var _connect=function(a){return new function(){var b=new Connection(a.connectionId++,a.socketOptions);b.logger=a.logger;b.on("connect",function(e,d){a.openConnections.push(d);if(a.openConnections.length===a.poolSize&&a._poolState!=="disconnected"){a._poolState="connected";a.emit("poolReady")}else{if(a.openConnections.length<a.poolSize){process.nextTick(function(){_connect(a)})}}});var c=0;b.on("error",function(e,d){c++;if(a._poolState!="disconnected"&&a.listeners("error").length>0){a.emit("error",e)}a._poolState="disconnected";a.stop()});b.on("close",function(){if(a._poolState!=="disconnected"&&a.listeners("close").length>0){a.emit("close")}a._poolState="disconnected";a.stop()});b.on("timeout",function(e,d){if(a._poolState!=="disconnected"&&a.listeners("timeout").length>0){a.emit("timeout",e)}a._poolState="disconnected";a.stop()});b.on("parseError",function(){if(a._poolState!=="disconnected"&&a.listeners("parseError").length>0){a.emit("parseError",new Error("parseError occured"))}a.stop()});b.on("message",function(d){a.emit("message",d)});b.start()}()};ConnectionPool.prototype.start=function(){var a=new Date().getTime();var b=this;if(this.listeners("poolReady").length==0){throw"pool must have at least one listener ready that responds to the [poolReady] event"}this._poolState="connecting";this._timeout=false;_connect(b)};ConnectionPool.prototype.restart=function(){this.stop(false);this.start()};ConnectionPool.prototype.stop=function(b){b=b==null?true:b;this._poolState="disconnected";if(b){this.removeAllEventListeners()}for(var a=0;a<this.openConnections.length;a++){this.openConnections[a].close()}this.openConnections=[]};ConnectionPool.prototype.isConnected=function(){return this._poolState==="connected"};ConnectionPool.prototype.checkoutConnection=function(b){var c=(this.currentConnectionIndex++%(this.openConnections.length));var a=this.openConnections[c];return a};ConnectionPool.prototype.getAllConnections=function(){return this.openConnections};ConnectionPool.prototype.removeAllEventListeners=function(){this.removeAllListeners("close");this.removeAllListeners("error");this.removeAllListeners("timeout");this.removeAllListeners("connect");this.removeAllListeners("end");this.removeAllListeners("parseError");this.removeAllListeners("message");this.removeAllListeners("poolReady")};