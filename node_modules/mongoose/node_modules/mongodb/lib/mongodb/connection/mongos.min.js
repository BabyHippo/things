var Mongos=function Mongos(f,d){if(!(this instanceof Mongos)){return new Mongos(f,d)}if(f==null||!Array.isArray(f)||f.length==0){throw new Error("At least one mongos proxy must be in the array")}this.options=d==null?{}:d;this.socketOptions=this.options.socketOptions!=null?this.options.socketOptions:{};this.haEnabled=this.options.ha==null?true:this.options.ha;this.mongosStatusCheckInterval=this.options.haInterval==null?2000:this.options.haInterval;this.servers=f;this.downServers=[];this.lowestPingTimeServer=null;this.lowestPingTime=0;for(var a=0;a<this.servers.length;a++){var e=this.servers[a];var g={host:e.host,port:e.port};if(this.socketOptions!=null){var c=Object.keys(this.socketOptions);for(var b=0;b<c.length;b++){g[c[a]]=this.socketOptions[c[a]]}}e.socketOptions=g}};Mongos.prototype.isMongos=function(){return true};Mongos.prototype.connect=function(c,f,a){if("function"===typeof f){a=f,f={}}if(f==null){f={}}if(!("function"===typeof a)){a=null}var g=this;this.db=c;this._serverState="connecting";this._numberOfServersLeftToInitialize=this.servers.length;this._currentMongos=this.servers[0];var b=function(i){return function(j,k){g._numberOfServersLeftToInitialize=g._numberOfServersLeftToInitialize-1;if(g._numberOfServersLeftToInitialize==0){if(g.haEnabled){g._replicasetTimeoutId=setTimeout(g.mongosCheckFunction,g.mongosStatusCheckInterval)}g._serverState="connected";g.db.emit("open",null,g.db);a(null,g.db)}}};var d=function(i){return function(k,m){var j=g._currentMongos.host+":"+g._currentMongos.port;var o=this.host+":"+this.port;if(j==o){if(g.servers.indexOf(i)!=-1){g.servers.splice(g.servers.indexOf(i),1)}for(var l=0;l<g.servers.length;l++){var n=g.servers[l];var o=n.host+":"+n.port;if(j!=o&&n.isConnected()){g._currentMongos=n;break}}}if(g.downServers.indexOf(i)==-1){g.downServers.push(i)}}};this.mongosCheckFunction=function(){if(g.downServers.length>0){var n=g.downServers.length;for(var m=0;m<g.downServers.length;m++){var k=g.downServers.pop();k.connect(g.db,{returnIsMasterResults:true},function(i){return function(o,p){n=n-1;if(o!=null){g.downServers.push(i)}else{i.on("close",d(i));i.on("error",d(i));g.servers.push(i)}if(n<=0){g._replicasetTimeoutId=setTimeout(g.mongosCheckFunction,g.mongosStatusCheckInterval)}}}(k))}}else{if(g.servers.length>0){var n=g.servers.length;var j=new Date().getTime();for(var m=0;m<g.servers.length;m++){var l=function(o){var i=o.checkoutReader();g.db.command({ping:1},{connection:i},function(p,r){var q=new Date().getTime()-j;if(g.lowestPingTimeServer==null){g.lowestPingTimeServer=o;g.lowestPingTime=q;g._currentMongos=o}else{if(g.lowestPingTime>q&&(o.host!=g.lowestPingTimeServer.host||o.port!=g.lowestPingTimeServer.port)){g.lowestPingTimeServer=o;g.lowestPingTime=q;g._currentMongos=o}}n=n-1;if(n==0){g._replicasetTimeoutId=setTimeout(g.mongosCheckFunction,g.mongosStatusCheckInterval)}})};l(g.servers[m])}}else{g._replicasetTimeoutId=setTimeout(g.mongosCheckFunction,g.mongosStatusCheckInterval)}}};for(var e=0;e<this.servers.length;e++){var h=this.servers[e];h.mongosInstance=this;h.on("close",d(h));h.on("error",d(h));h.connect(g.db,{returnIsMasterResults:true},b(h))}};Mongos.prototype.allServerInstances=function(){return this.servers};Mongos.prototype.allRawConnections=function(){var a=[];for(var b=0;b<this.servers.length;b++){a=a.concat(this.servers[b].allRawConnections)}return a};Mongos.prototype.isConnected=function(){return this._serverState=="connected"};Mongos.prototype.checkoutWriter=function(){if(this._currentMongos==null&&this.servers.length>0){return this.servers[0].checkoutWriter()}return this._currentMongos.checkoutWriter()};Mongos.prototype.checkoutReader=function(a){if(typeof a=="object"&&a._type=="ReadPreference"){if(!a.isValid()){throw new Error("Illegal readPreference mode specified, "+a.mode)}}else{if(!ReadPreference.isValid(a)){throw new Error("Illegal readPreference mode specified, "+a)}}if(this._currentMongos==null&&this.servers.length>0){return this.servers[0].checkoutReader()}return this._currentMongos.checkoutReader()};Mongos.prototype.close=function(a){var d=this;this._serverState="disconnected";var c=d.servers.length;if(d._replicasetTimeoutId!=null){clearTimeout(d._replicasetTimeoutId)}for(var b=0;b<d.servers.length;b++){d.servers[b].close(function(e,f){c=c-1;if(c==0&&typeof a=="function"){a(null)}})}};Mongos.prototype._isUsed=function(){return this._used};exports.Mongos=Mongos;