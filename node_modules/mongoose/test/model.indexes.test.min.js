var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error;describe("model",function(){describe("indexes",function(){it("are created when model is compiled",function(c){var d=new Schema({name:{type:String,index:true},last:String,email:String,date:Date});d.index({last:1,email:1},{unique:true});d.index({date:1},{expires:10});var b=start(),e=b.model("IndexedModel",d,"indexedmodel"+random()),a=0;e.on("index",function(){e.collection.getIndexes({full:true},function(f,g){assert.ifError(f);g.forEach(function(h){switch(h.name){case"_id_":case"name_1":case"last_1_email_1":a++;break;case"date_1":a++;assert.equal(h.expiresAfterSeconds,10);break}});b.close();assert.equal(4,a);c()})})});it("of embedded documents",function(d){var b=new Schema({_id:{type:ObjectId,index:true},title:{type:String,index:true},desc:String});var e=new Schema({name:{type:String,index:true},blogposts:[b]});var c=start(),f=c.model("DeepIndexedModel",e,"deepindexedmodel"+random()),a=0;f.on("index",function(){f.collection.getIndexes(function(g,j){assert.ifError(g);for(var h in j){j[h].forEach(function(i){if(i[0]=="name"){a++}if(i[0]=="blogposts._id"){a++}if(i[0]=="blogposts.title"){a++}})}c.close();assert.equal(3,a);d()})})});it("compound: on embedded docs",function(c){var a=new Schema({title:String,desc:String});a.index({title:1,desc:1});var e=new Schema({name:{type:String,index:true},blogposts:[a]});var b=start(),f=b.model("DeepCompoundIndexModel",e,"deepcompoundindexmodel"+random()),d=0;f.on("index",function(){f.collection.getIndexes(function(g,i){assert.ifError(g);for(var h in i){switch(h){case"name_1":case"blogposts.title_1_blogposts.desc_1":++d;break}}b.close();assert.equal(2,d);c()})})});it("error should emit on the model",function(b){var a=start();var c=new Schema({name:{type:String}}),d=a.model("IndexError",c,"x"+random());d.on("index",function(e){a.close();assert.ok(/^E11000 duplicate key error index:/.test(e.message),e);b()});d.create({name:"hi"},{name:"hi"},function(e){assert.strictEqual(e,null);d.schema.index({name:1},{unique:true});d.schema.index({other:1});d.init()})});describe("auto creation",function(){it("can be disabled",function(b){var a=start();var c=new Schema({name:{type:String,index:true}});c.set("autoIndex",false);var d=a.model("AutoIndexing",c,"x"+random());d.on("index",function(e){assert.ok(false,"Model.ensureIndexes() was called")});setTimeout(function(){d.collection.getIndexes(function(e,f){assert.ifError(e);assert.equal(0,Object.keys(f).length);b()})},100)})});it("can be manually triggered",function(c){var b=start();var d=new Schema({name:{type:String}}),e=b.model("ManualIndexing",d,"x"+random());assert.equal("function",typeof e.ensureIndexes);e.schema.index({name:1},{sparse:true});var a=false;e.on("index",function(f){a=true});e.ensureIndexes(function(f){assert.ifError(f);assert.ok(a);c()})})})});