var start=require("../../common"),assert=require("assert"),mongoose=start.mongoose,Schema=mongoose.Schema;mongoose.model("NativeDriverTest",new Schema({title:String}));describe("drivers: native:",function(){it("sparse index works",function(b){var a=start(),c=a.model("NativeDriverTest");c.collection.ensureIndex({title:1},{sparse:true},function(d){assert.ifError(d);c.collection.getIndexes(function(e,f){a.close();assert.ifError(e);assert.ok(f instanceof Object);assert.deepEqual(f.title_1,[["title",1]]);b()})})});it("traditional ensureIndex spec syntax for fields works",function(b){var a=start(),c=a.model("NativeDriverTest");c.collection.ensureIndex([["a",1]],function(){a.close();b()})});it("unique index failure passes error",function(b){var a=start(),d=new Schema({title:String}),c=a.model("NativeDriverTestUnique",d);c.create({title:"x"},{title:"x"},function(e){assert.ifError(e);c.collection.ensureIndex({title:1},{unique:true,safe:true},function(f){a.close();assert.ok(/E11000 duplicate key error index/.test(f.message));b()})})})});