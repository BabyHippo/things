var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ObjectId=Schema.ObjectId,MongooseBuffer=mongoose.Types.Buffer,DocumentObjectId=mongoose.Types.ObjectId;describe("schema select option",function(){it("excluding paths through schematype",function(b){var a=start();var d=new Schema({thin:Boolean,name:{type:String,select:false},docs:[new Schema({bool:Boolean,name:{type:String,select:false}})]});var c=a.model("ExcludingBySchemaType",d);c.create({thin:true,name:"the excluded",docs:[{bool:true,name:"test"}]},function(f,h){assert.ifError(f);assert.equal(h.name,"the excluded");assert.equal(h.docs[0].name,"test");var g=3;function e(i,j){if(!--g){a.close();b()}if(Array.isArray(j)){j=j[0]}assert.strictEqual(null,i);assert.equal(false,j.isSelected("name"));assert.equal(false,j.isSelected("docs.name"));assert.strictEqual(undefined,j.name)}c.findById(h).select("-thin -docs.bool").exec(e);c.find({_id:h._id}).select("thin docs.bool").exec(e);c.findById(h,e)})});it("including paths through schematype",function(b){var a=start();var d=new Schema({thin:Boolean,name:{type:String,select:true},docs:[new Schema({bool:Boolean,name:{type:String,select:true}})]});var c=a.model("IncludingBySchemaType",d);c.create({thin:true,name:"the included",docs:[{bool:true,name:"test"}]},function(f,h){assert.ifError(f);assert.equal(h.name,"the included");assert.equal(h.docs[0].name,"test");var g=2;function e(i,j){if(!--g){a.close();b()}if(Array.isArray(j)){j=j[0]}assert.strictEqual(null,i);assert.strictEqual(true,j.isSelected("name"));assert.strictEqual(true,j.isSelected("docs.name"));assert.equal(j.name,"the included")}c.findById(h).select("-thin -docs.bool").exec(e);c.find({_id:h._id}).select("thin docs.bool").exec(e)})});it("overriding schematype select options",function(b){var a=start();var g=new Schema({thin:Boolean,name:{type:String,select:true},docs:[new Schema({name:{type:String,select:true},bool:Boolean})]});var d=new Schema({thin:Boolean,name:{type:String,select:false},docs:[new Schema({name:{type:String,select:false},bool:Boolean})]});var f=a.model("OverriddingSelectedBySchemaType",g);var c=a.model("OverriddingExcludedBySchemaType",d);var e=4;f.create({thin:true,name:"the included",docs:[{name:"test",bool:true}]},function(h,i){assert.ifError(h);assert.equal(i.name,"the included");assert.equal(i.docs[0].name,"test");f.find({_id:i._id}).select("thin name docs.bool docs.name").exec(function(j,k){if(!--e){a.close();b()}k=k[0];assert.ifError(j);assert.strictEqual(true,k.isSelected("name"));assert.strictEqual(true,k.isSelected("thin"));assert.strictEqual(true,k.isSelected("docs.name"));assert.strictEqual(true,k.isSelected("docs.bool"));assert.equal(k.name,"the included");assert.equal(k.docs[0].name,"test");assert.ok(k.thin);assert.ok(k.docs[0].bool)});f.findById(i).select("-name -docs.name").exec(function(j,k){if(!--e){a.close();b()}assert.strictEqual(null,j);assert.equal(false,k.isSelected("name"));assert.equal(true,k.isSelected("thin"));assert.equal(false,k.isSelected("docs.name"));assert.equal(true,k.isSelected("docs.bool"));assert.strictEqual(undefined,k.name);assert.strictEqual(undefined,k.docs[0].name);assert.equal(true,k.thin);assert.equal(true,k.docs[0].bool)})});c.create({thin:true,name:"the excluded",docs:[{name:"test",bool:true}]},function(i,h){assert.ifError(i);assert.equal(h.name,"the excluded");assert.equal(h.docs[0].name,"test");c.find({_id:h._id}).select("thin name docs.name docs.bool").exec(function(k,j){if(!--e){a.close();b()}j=j[0];assert.strictEqual(null,k);assert.equal(true,j.isSelected("name"));assert.equal(true,j.isSelected("thin"));assert.equal(true,j.isSelected("docs.name"));assert.equal(true,j.isSelected("docs.bool"));assert.equal(j.name,"the excluded");assert.equal(j.docs[0].name,"test");assert.ok(j.thin);assert.ok(j.docs[0].bool)});c.findById(h).select("-name -docs.name").exec(function(k,j){if(!--e){a.close();b()}assert.strictEqual(null,k);assert.equal(j.isSelected("name"),false);assert.equal(j.isSelected("thin"),true);assert.equal(j.isSelected("docs.name"),false);assert.equal(j.isSelected("docs.bool"),true);assert.strictEqual(undefined,j.name);assert.strictEqual(undefined,j.docs[0].name);assert.strictEqual(true,j.thin);assert.strictEqual(true,j.docs[0].bool)})})});it("forcing inclusion of a deselected schema path works",function(b){var a=start();var c=new Schema({thin:Boolean,name:{type:String,select:false},docs:[new Schema({name:{type:String,select:false},bool:Boolean})]});var d=a.model("ForcedInclusionOfPath",c);d.create({thin:false,name:"1 meter",docs:[{name:"test",bool:false}]},function(f,e){assert.ifError(f);d.findById(e).select("+name +docs.name").exec(function(h,g){assert.ifError(h);assert.equal(false,g.thin);assert.equal("1 meter",g.name);assert.equal(false,g.docs[0].bool);assert.equal("test",g.docs[0].name);assert.equal(e.id,g.id);d.findById(e).select("+name -thin +docs.name -docs.bool").exec(function(j,i){assert.ifError(j);assert.equal(undefined,i.thin);assert.equal("1 meter",i.name);assert.equal(undefined,i.docs[0].bool);assert.equal("test",i.docs[0].name);assert.equal(e.id,i.id);d.findById(e).select("-thin +name -docs.bool +docs.name").exec(function(l,k){assert.ifError(l);assert.equal(undefined,k.thin);assert.equal("1 meter",k.name);assert.equal(undefined,k.docs[0].bool);assert.equal("test",k.docs[0].name);assert.equal(e.id,k.id);d.findById(e).select("-thin -docs.bool").exec(function(n,m){a.close();assert.ifError(n);assert.equal(undefined,m.thin);assert.equal(undefined,m.name);assert.equal(undefined,m.docs[0].bool);assert.equal(undefined,m.docs[0].name);assert.equal(e.id,m.id);b()})})})})})});it("conflicting schematype path selection should not error",function(b){var a=start();var d=new Schema({thin:Boolean,name:{type:String,select:true},conflict:{type:String,select:false}});var c=a.model("ConflictingBySchemaType",d);c.create({thin:true,name:"bing",conflict:"crosby"},function(f,h){assert.strictEqual(null,f);assert.equal(h.name,"bing");assert.equal(h.conflict,"crosby");var g=2;function e(i,j){if(!--g){a.close();b()}if(Array.isArray(j)){j=j[0]}assert.ifError(i);assert.equal(j.name,"bing");assert.equal(undefined,j.conflict)}c.findById(h).exec(e);c.find({_id:h._id}).exec(e)})});it("selecting _id works with excluded schematype path",function(b){var a=start();var d=new Schema({name:{type:String,select:false}});var c=a.model("SelectingOnly_idWithExcludedSchemaType",d);c.find().select("_id -name").exec(function(e){assert.ok(e instanceof Error,"conflicting path selection error should be instance of Error");c.find().select("_id").exec(function(f){a.close();assert.ifError(f,f&&f.stack);b()})})});it("selecting _id works with excluded schematype path on sub doc",function(b){var a=start();var d=new Schema({docs:[new Schema({name:{type:String,select:false}})]});var c=a.model("SelectingOnly_idWithExcludedSchemaType",d);c.find().select("_id -docs.name").exec(function(e){assert.ok(e instanceof Error,"conflicting path selection error should be instance of Error");c.find().select("_id").exec(function(f){a.close();assert.ifError(f,f&&f.stack);b()})})});it("all inclusive/exclusive combos work",function(c){var b=start();var a="inclusiveexclusivecomboswork_"+random();var g=new Schema({name:{type:String},age:Number},{collection:a});var d=b.model("InclusiveExclusiveCombosWork",g);var h=new Schema({name:{type:String,select:false},age:Number},{collection:a});var f=b.model("InclusiveExclusiveCombosWorkWithSchemaSelectionFalse",h);var i=new Schema({name:{type:String,select:true},age:Number},{collection:a});var j=b.model("InclusiveExclusiveCombosWorkWithSchemaSelectionTrue",i);function k(n,m,l){n.findOne().select("_id -name").exec(function(p,o){assert.ok(p);assert.ok(!o);n.findOne().select("-_id name").exec(function(r,q){assert.ifError(r);assert.equal(undefined,q.id);assert.equal("ssd",q.name);assert.equal(undefined,q.age);n.findOne().select("-_id -name").exec(function(t,s){assert.ifError(t);assert.equal(undefined,s.id);assert.equal(undefined,s.name);assert.equal(0,s.age);n.findOne().select("_id name").exec(function(v,u){assert.ifError(v);assert.equal(m,u.id);assert.equal("ssd",u.name);assert.equal(undefined,u.age);l()})})})})}function e(n,m,l){n.findOne().select("age -name").exec(function(p,o){assert.ok(p);assert.ok(!o);n.findOne().select("-age name").exec(function(r,q){assert.ok(r);assert.ok(!q);n.findOne().select("-age -name").exec(function(t,s){assert.ifError(t);assert.equal(m,s.id);assert.equal(undefined,s.name);assert.equal(undefined,s.age);n.findOne().select("age name").exec(function(v,u){assert.ifError(v);assert.equal(m,u.id);assert.equal("ssd",u.name);assert.equal(0,u.age);l()})})})})}d.create({name:"ssd",age:0},function(m,l){assert.ifError(m);var n=l.id;k(d,n,function(){e(d,n,function(){k(f,n,function(){e(f,n,function(){k(j,n,function(){e(j,n,function(){b.close();c()})})})})})})})})});