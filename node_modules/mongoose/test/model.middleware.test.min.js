var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,random=require("../lib/utils").random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ValidatorError=SchemaType.ValidatorError,ValidationError=mongoose.Document.ValidationError,ObjectId=Schema.ObjectId,DocumentObjectId=mongoose.Types.ObjectId,DocumentArray=mongoose.Types.DocumentArray,EmbeddedDocument=mongoose.Types.Embedded,MongooseArray=mongoose.Types.Array,MongooseError=mongoose.Error;describe("model middleware",function(){it("post save",function(c){var d=new Schema({title:String});var a=0;d.post("save",function(g){assert.equal(g.title,"Little Green Running Hood");assert.equal(0,a);a++});d.post("save",function(g){assert.equal(g.title,"Little Green Running Hood");assert.equal(1,a);a++});d.post("save",function(g){assert.equal(g.title,"Little Green Running Hood");assert.equal(2,a);b.close();c()});var b=start(),f=b.model("TestPostSaveMiddleware",d);var e=new f({title:"Little Green Running Hood"});e.save(function(g){assert.ifError(g)})});it("works",function(c){var d=new Schema({title:String});var a=0;d.pre("init",function(g){a++;g()});d.pre("save",function(g){a++;g(new Error("Error 101"))});d.pre("remove",function(g){a++;g()});mongoose.model("TestMiddleware",d);var b=start(),f=b.model("TestMiddleware");var e=new f();e.init({title:"Test"});assert.equal(1,a);e.save(function(g){assert.ok(g instanceof Error);assert.equal(g.message,"Error 101");assert.equal(2,a);e.remove(function(h){b.close();assert.ifError(h);assert.equal(3,a);c()})})});it("post init",function(b){var e=new Schema({title:String});var d=0,c=0;e.pre("init",function(h){++d;h()});e.post("init",function(){++c});mongoose.model("TestPostInitMiddleware",e);var a=start(),g=a.model("TestPostInitMiddleware");var f=new g({title:"banana"});f.save(function(h){assert.ifError(h);g.findById(f._id,function(i,j){assert.ifError(i);assert.equal(1,d);assert.equal(1,c);j.remove(function(k){a.close();b()})})})})});