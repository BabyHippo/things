var start=require("./common"),assert=require("assert"),mongoose=start.mongoose,utils=require("../lib/utils"),random=utils.random,Query=require("../lib/query"),Schema=mongoose.Schema,SchemaType=mongoose.SchemaType,CastError=SchemaType.CastError,ObjectId=Schema.ObjectId,MongooseBuffer=mongoose.Types.Buffer,DocumentObjectId=mongoose.Types.ObjectId,fs=require("fs");var names=("Aaden Aaron Adrian Aditya Agustin Jim Bob Jonah Frank Sally Lucy").split(" ");var Person=new Schema({name:String});mongoose.model("PersonForStream",Person);var collection="personforstream_"+random();describe("cursor stream:",function(){before(function(b){var a=start(),c=a.model("PersonForStream",collection);var d=names.map(function(e){return{name:e}});c.create(d,function(e){assert.ifError(e);a.close();b()})});it("works",function(d){var c=start(),g=c.model("PersonForStream",collection),f=0,b=0,h=0,j=0,e;var k=g.find({}).stream();k.on("data",function(i){assert.strictEqual(true,!!i.name);assert.strictEqual(true,!!i._id);if(h>0&&0===j){e=new Error("data emitted during pause");return a()}if(++f===3){assert.equal(false,k.paused);k.pause();assert.equal(true,k.paused);h++;setTimeout(function(){assert.equal(true,k.paused);j++;k.resume();assert.equal(false,k.paused)},20)}});k.on("error",function(i){e=i;a()});k.on("close",function(){b++;a()});function a(){c.close();assert.strictEqual(undefined,e);assert.equal(f,names.length);assert.equal(1,b);assert.equal(1,h);assert.equal(1,j);assert.equal(true,k._cursor.isClosed());d()}});it("immediately destroying a stream prevents the query from executing",function(c){var b=start(),e=b.model("PersonForStream",collection),d=0;var f=e.where("name","Jonah").select("name").findOne().stream();f.on("data",function(){d++});f.on("close",a);f.on("error",a);f.destroy();function a(g){assert.ifError(g);assert.equal(0,d);process.nextTick(function(){b.close();assert.strictEqual(null,f._fields);c()})}});it("destroying a stream stops it",function(c){var b=start(),f=b.model("PersonForStream",collection),d=0,e=0;var g=f.where("name").exists().limit(10).select("_id").stream();assert.strictEqual(null,g._destroyed);assert.equal(true,g.readable);g.on("data",function(h){assert.strictEqual(undefined,h.name);if(++e===5){g.destroy();assert.equal(false,g.readable)}});g.on("close",a);g.on("error",a);function a(h){++d;setTimeout(function(){b.close();assert.strictEqual(undefined,h);assert.equal(5,e);assert.equal(1,d);assert.equal(true,g._destroyed);assert.equal(false,g.readable);assert.equal(true,g._cursor.isClosed());c()},100)}});it("errors",function(d){var c=start({server:{auto_reconnect:false}}),g=c.model("PersonForStream",collection),e=0,b=0,f=0;var h=g.find().batchSize(5).stream();h.on("data",function(i){if(++f===5){c.close()}});h.on("close",function(){b++});h.on("error",a);function a(i){++e;setTimeout(function(){assert.equal("no open connections",i.message);assert.equal(f,5);assert.equal(1,b);assert.equal(1,e);assert.equal(h._destroyed,true);assert.equal(h.readable,false);assert.equal(h._cursor.isClosed(),true);d()},100)}});it("pipe",function(c){var b=start(),f=b.model("PersonForStream",collection),d="/tmp/_mongoose_stream_out.txt",e=fs.createWriteStream(d);var g=f.find().sort("name").limit(20).stream();g.pipe(e);g.on("error",a);g.on("close",a);function a(i){b.close();assert.ifError(i);var h=fs.readFileSync(d,"utf8");assert.ok(/Aaden/.test(h));assert.ok(/Aaron/.test(h));assert.ok(/Adrian/.test(h));assert.ok(/Aditya/.test(h));assert.ok(/Agustin/.test(h));fs.unlink(d);c()}});it("lean",function(d){var c=start(),g=c.model("PersonForStream",collection),f=0,b=0,e;var h=g.find({},null,{lean:true}).stream();h.on("data",function(i){assert.strictEqual(false,i instanceof mongoose.Document);f++});h.on("error",function(i){e=i;a()});h.on("close",function(){b++;a()});function a(){c.close();assert.strictEqual(undefined,e);assert.equal(f,names.length);assert.equal(1,b);assert.equal(true,h._cursor.isClosed());d()}})});