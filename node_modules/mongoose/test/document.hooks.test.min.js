var start=require("./common"),mongoose=start.mongoose,assert=require("assert"),Schema=mongoose.Schema,ObjectId=Schema.ObjectId,Document=require("../lib/document"),DocumentObjectId=mongoose.Types.ObjectId;function TestDocument(){Document.apply(this,arguments)}TestDocument.prototype.__proto__=Document.prototype;var em=new Schema({title:String,body:String});em.virtual("works").get(function(){return"em virtual works"});var schema=new Schema({test:String,oids:[ObjectId],numbers:[Number],nested:{age:Number,cool:ObjectId,deep:{x:String},path:String,setr:String},nested2:{nested:String,yup:{nested:Boolean,yup:String,age:Number}},em:[em]});TestDocument.prototype._setSchema(schema);schema.virtual("nested.agePlus2").get(function(a){return this.nested.age+2});schema.virtual("nested.setAge").set(function(a){this.nested.age=a});schema.path("nested.path").get(function(a){return this.nested.age+(a?a:"")});schema.path("nested.setr").set(function(a){return a+" setter"});TestDocument.prototype.hooksTest=function(a){a(null,arguments)};describe("document: hooks:",function(){it("step order",function(d){var c=new TestDocument(),e=0,a=0,b=false;c.pre("hooksTest",function(f){e++;setTimeout(function(){assert.equal(1,e);f()},50)});c.pre("hooksTest",function(f){e++;f()});c.pre("hooksTest",true,function(g,f){e++;assert.equal(3,e);setTimeout(function(){assert.equal(4,e)},10);setTimeout(function(){e++;f()},110);g()});c.pre("hooksTest",true,function(g,f){e++;setTimeout(function(){assert.equal(4,e)},10);setTimeout(function(){e++;f()},110);g()});c.hooksTest(function(f){assert.ifError(f);assert.equal(6,e);d()})});it("calling next twice does not break",function(c){var b=new TestDocument(),d=0,a=false;b.pre("hooksTest",function(e){d++;e();e()});b.pre("hooksTest",function(e){d++;e()});b.hooksTest(function(e){assert.ifError(e);assert.equal(2,d);c()})});it("calling done twice does not break",function(b){var a=new TestDocument(),c=0;a.pre("hooksTest",true,function(e,d){c++;e();d();d()});a.pre("hooksTest",true,function(e,d){c++;e();d();d()});a.hooksTest(function(d){assert.ifError(d);assert.equal(2,c);b()})});it("errors from a serial hook",function(c){var b=new TestDocument(),d=0,a=false;b.pre("hooksTest",function(e){d++;e()});b.pre("hooksTest",function(e){d++;e(new Error)});b.pre("hooksTest",function(e){d++});b.hooksTest(function(e){assert.ok(e instanceof Error);assert.equal(2,d);c()})});it("errors from last serial hook",function(c){var b=new TestDocument(),a=false;b.pre("hooksTest",function(d){d(new Error)});b.hooksTest(function(d){assert.ok(d instanceof Error);c()})});it("mutating incoming args via middleware",function(){var a=new TestDocument();a.pre("set",function(b,c,d){b(c,"altered-"+d)});a.set("test","me");assert.equal("altered-me",a.test)});it("test hooks system errors from a parallel hook",function(c){var b=new TestDocument(),d=0,a=false;b.pre("hooksTest",true,function(f,e){d++;f();e()});b.pre("hooksTest",true,function(f,e){d++;f();e()});b.pre("hooksTest",true,function(f,e){d++;f();e(new Error)});b.hooksTest(function(e){assert.ok(e instanceof Error);assert.equal(3,d);c()})});it("passing two arguments to a method subject to hooks and return value",function(c){var b=new TestDocument(),a=false;b.pre("hooksTest",function(d){d()});b.hooksTest(function(e,d){assert.equal(2,d.length);assert.equal(d[1],"test");c()},"test")});it("hooking set works with document arrays (gh-746)",function(c){var b=start();var a=new Schema({text:String});a.pre("set",function(g,h,j,i){g(h,j,i)});var f=new Schema({name:String,e:[a]});var e=b.model("docArrayWithHookedSet",f);var d=new e({name:"test"});d.e=[{text:"hi"}];d.save(function(g){b.close();assert.ok(!g);c()})})});