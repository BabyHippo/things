var start=require("./common"),assert=require("assert"),mongoose=require("./common").mongoose,Schema=mongoose.Schema,random=require("../lib/utils").random,MongooseArray=mongoose.Types.Array,collection="avengers_"+random();var User=new Schema({name:String,pets:[Schema.ObjectId]});mongoose.model("User",User);var Pet=new Schema({name:String});mongoose.model("Pet",Pet);describe("types array",function(){it("behaves and quacks like an Array",function(){var b=new MongooseArray;assert.ok(b instanceof Array);assert.ok(b instanceof MongooseArray);assert.equal(true,Array.isArray(b));assert.deepEqual(b._atomics.constructor,Object)});describe("hasAtomics",function(){it("does not throw",function(){var e=new MongooseArray([12,3,4,5]).filter(Boolean);var f=false;try{e.hasAtomics}catch(c){f=true}assert.ok(!f);var d=new MongooseArray([67,8]).filter(Boolean);try{d.push(3,4)}catch(c){console.error(c);f=true}assert.ok(!f)})});describe("indexOf()",function(){it("works",function(c){var b=start(),k=b.model("User","users_"+random()),g=b.model("Pet","pets"+random());var i=new k({name:"tj"}),j=new g({name:"tobi"}),e=new g({name:"loki"}),d=new g({name:"jane"}),h=[];i.pets.push(j);i.pets.push(e);i.pets.push(d);var f=3;[j,e,d].forEach(function(l){l.save(function(){--f||a()})});function a(){g.find({},function(l,m){assert.ifError(l);i.save(function(n){assert.ifError(n);k.findOne({name:"tj"},function(o,p){b.close();assert.ifError(o);assert.equal(p.pets.length,3);assert.equal(p.pets.indexOf(j.id),0);assert.equal(p.pets.indexOf(e.id),1);assert.equal(p.pets.indexOf(d.id),2);assert.equal(p.pets.indexOf(j._id),0);assert.equal(p.pets.indexOf(e._id),1);assert.equal(p.pets.indexOf(d._id),2);c()})})})}})});describe("splice()",function(){it("works",function(f){var d="splicetest-number"+random();var e=start(),g=new Schema({numbers:Array}),c=e.model("splicetestNumber",g,d);var b=new c({numbers:[4,5,6,7]});b.save(function(a){assert.ifError(a);c.findById(b._id,function(i,h){assert.ifError(i);var j=h.numbers.splice(1,1);assert.deepEqual(j,[5]);assert.deepEqual(h.numbers.toObject(),[4,6,7]);h.save(function(k){assert.ifError(k);c.findById(b._id,function(m,l){assert.ifError(m);assert.deepEqual(l.numbers.toObject(),[4,6,7]);c.collection.drop(function(n){e.close();assert.ifError(n);f()})})})})})});it("on embedded docs",function(f){var d="splicetest-embeddeddocs"+random();var e=start(),g=new Schema({types:[new Schema({type:String})]}),c=e.model("splicetestEmbeddedDoc",g,d);var b=new c({types:[{type:"bird"},{type:"boy"},{type:"frog"},{type:"cloud"}]});b.save(function(a){assert.ifError(a);c.findById(b._id,function(i,h){assert.ifError(i);h.types.$pop();var k=h.types.splice(1,1);assert.equal(k.length,1);assert.equal(k[0].type,"boy");var j=h.types.toObject();assert.equal(j[0].type,"bird");assert.equal(j[1].type,"frog");h.save(function(l){assert.ifError(l);c.findById(b._id,function(n,m){e.close();assert.ifError(n);var o=m.types.toObject();assert.equal(o[0].type,"bird");assert.equal(o[1].type,"frog");f()})})})})})});describe("unshift()",function(){it("works",function(e){var d=start(),f=new Schema({types:[new Schema({type:String})],nums:[Number],strs:[String]}),c=d.model("unshift",f,"unshift"+random());var b=new c({types:[{type:"bird"},{type:"boy"},{type:"frog"},{type:"cloud"}],nums:[1,2,3],strs:"one two three".split(" ")});b.save(function(a){assert.ifError(a);c.findById(b._id,function(h,g){assert.ifError(h);var l=g.types.unshift({type:"tree"});var i=g.nums.unshift(0);var k=g.strs.unshift("zero");assert.equal(l,5);assert.equal(i,4);assert.equal(k,4);g.types.push({type:"worm"});var j=g.types.toObject();assert.equal(j[0].type,"tree");assert.equal(j[1].type,"bird");assert.equal(j[2].type,"boy");assert.equal(j[3].type,"frog");assert.equal(j[4].type,"cloud");assert.equal(j[5].type,"worm");j=g.nums.toObject();assert.equal(j[0].valueOf(),0);assert.equal(j[1].valueOf(),1);assert.equal(j[2].valueOf(),2);assert.equal(j[3].valueOf(),3);j=g.strs.toObject();assert.equal(j[0],"zero");assert.equal(j[1],"one");assert.equal(j[2],"two");assert.equal(j[3],"three");g.save(function(m){assert.ifError(m);c.findById(b._id,function(o,n){d.close();assert.ifError(o);var p=n.types.toObject();assert.equal(p[0].type,"tree");assert.equal(p[1].type,"bird");assert.equal(p[2].type,"boy");assert.equal(p[3].type,"frog");assert.equal(p[4].type,"cloud");assert.equal(p[5].type,"worm");p=n.nums.toObject();assert.equal(p[0].valueOf(),0);assert.equal(p[1].valueOf(),1);assert.equal(p[2].valueOf(),2);assert.equal(p[3].valueOf(),3);p=n.strs.toObject();assert.equal(p[0],"zero");assert.equal(p[1],"one");assert.equal(p[2],"two");assert.equal(p[3],"three");e()})})})})})});describe("shift()",function(){it("works",function(e){var d=start(),f=new Schema({types:[new Schema({type:String})],nums:[Number],strs:[String]});var c=d.model("shift",f,"unshift"+random());var b=new c({types:[{type:"bird"},{type:"boy"},{type:"frog"},{type:"cloud"}],nums:[1,2,3],strs:"one two three".split(" ")});b.save(function(a){assert.ifError(a);c.findById(b._id,function(h,g){assert.ifError(h);var l=g.types.shift();var i=g.nums.shift();var k=g.strs.shift();assert.equal(l.type,"bird");assert.equal(i,1);assert.equal(k,"one");var j=g.types.toObject();assert.equal(j[0].type,"boy");assert.equal(j[1].type,"frog");assert.equal(j[2].type,"cloud");g.nums.push(4);j=g.nums.toObject();assert.equal(2,j[0].valueOf());assert.equal(j[1].valueOf(),3);assert.equal(j[2].valueOf(),4);j=g.strs.toObject();assert.equal(j[0],"two");assert.equal(j[1],"three");g.save(function(m){assert.ifError(m);c.findById(b._id,function(o,n){d.close();assert.ifError(o);var p=n.types.toObject();assert.equal(p[0].type,"boy");assert.equal(p[1].type,"frog");assert.equal(p[2].type,"cloud");p=n.nums.toObject();assert.equal(p[0].valueOf(),2);assert.equal(p[1].valueOf(),3);assert.equal(p[2].valueOf(),4);p=n.strs.toObject();assert.equal(p[0],"two");assert.equal(p[1],"three");e()})})})})})});describe("$shift",function(){it("works",function(b){var a=start();var d=new Schema({colors:[]});var e=a.model("Painting",d);var c=new e({colors:["blue","green","yellow"]});c.save(function(f){assert.ifError(f);e.findById(c,function(i,h){assert.ifError(i);assert.equal(3,h.colors.length);var g=h.colors.$shift();assert.equal(2,h.colors.length);assert.equal(g,"blue");g=h.colors.$shift();assert.equal(g,undefined);assert.equal(2,h.colors.length);h.save(function(k){assert.equal(null,k);var j=h.colors.$shift();assert.equal(1,h.colors.length);assert.equal(j,"green");h.save(function(l){assert.equal(null,l);e.findById(h,function(n,m){a.close();assert.ifError(n);assert.equal(1,m.colors.length);assert.equal(m.colors[0],"yellow");b()})})})})})})});describe("pop()",function(){it("works",function(e){var d=start(),f=new Schema({types:[new Schema({type:String})],nums:[Number],strs:[String]});var c=d.model("pop",f,"pop"+random());var b=new c({types:[{type:"bird"},{type:"boy"},{type:"frog"},{type:"cloud"}],nums:[1,2,3],strs:"one two three".split(" ")});b.save(function(a){assert.ifError(a);c.findById(b._id,function(h,g){assert.ifError(h);var l=g.types.pop();var i=g.nums.pop();var k=g.strs.pop();assert.equal(l.type,"cloud");assert.equal(i,3);assert.equal(k,"three");var j=g.types.toObject();assert.equal(j[0].type,"bird");assert.equal(j[1].type,"boy");assert.equal(j[2].type,"frog");g.nums.push(4);j=g.nums.toObject();assert.equal(j[0].valueOf(),1);assert.equal(j[1].valueOf(),2);assert.equal(j[2].valueOf(),4);j=g.strs.toObject();assert.equal(j[0],"one");assert.equal(j[1],"two");g.save(function(m){assert.ifError(m);c.findById(b._id,function(o,n){d.close();assert.ifError(o);var p=n.types.toObject();assert.equal(p[0].type,"bird");assert.equal(p[1].type,"boy");assert.equal(p[2].type,"frog");p=n.nums.toObject();assert.equal(p[0].valueOf(),1);assert.equal(p[1].valueOf(),2);assert.equal(p[2].valueOf(),4);p=n.strs.toObject();assert.equal(p[0],"one");assert.equal(p[1],"two");e()})})})})})});describe("pull()",function(){it("works",function(f){var e=start();var d=new Schema({name:String});var c=e.model("Cat",d);var g=new Schema({a:[{type:Schema.ObjectId,ref:"Cat"}]});var a=e.model("TestPull",g);var b=new c({name:"peanut"});b.save(function(i){assert.ifError(i);var h=new a({a:[b._id]});h.save(function(j){assert.ifError(j);a.findById(h,function(l,k){e.close();assert.ifError(l);assert.equal(1,k.a.length);k.a.pull(b.id);assert.equal(k.a.length,0);f()})})})})});describe("pop()",function(){it("works",function(b){var a=start();var d=new Schema({colors:[]});var e=a.model("Painting",d);var c=new e({colors:["blue","green","yellow"]});c.save(function(f){assert.ifError(f);e.findById(c,function(i,h){assert.ifError(i);assert.equal(3,h.colors.length);var g=h.colors.$pop();assert.equal(2,h.colors.length);assert.equal(g,"yellow");g=h.colors.$pop();assert.equal(g,undefined);assert.equal(2,h.colors.length);assert.equal(false,"$set" in h.colors._atomics,"invalid $atomic op used");h.save(function(k){assert.equal(null,k);var j=h.colors.$pop();assert.equal(1,h.colors.length);assert.equal(j,"green");h.save(function(l){assert.equal(null,l);e.findById(h,function(n,m){a.close();assert.strictEqual(null,n);assert.equal(1,m.colors.length);assert.equal(m.colors[0],"blue");b()})})})})})})});describe("addToSet()",function(){it("works",function(i){var h=start(),j=new Schema({name:String,arr:[]}),t=new Schema({num:[Number],str:[String],doc:[j],date:[Date],id:[Schema.ObjectId]});var s=h.model("testAddToSet",t);var r=new s;r.num.push(1,2,3);r.str.push("one","two","tres");r.doc.push({name:"Dubstep",arr:[1]},{name:"Polka",arr:[{x:3}]});var a=new Date;var b=new Date(+a+60000);var c=new Date(+a+30000);var d=new Date(+a+20000);var f=new Date(+a+90000);var g=new Date(+a+10000);r.date.push(a,b);var k=new mongoose.Types.ObjectId;var l=new mongoose.Types.ObjectId;var n=new mongoose.Types.ObjectId;var o=new mongoose.Types.ObjectId;var p=new mongoose.Types.ObjectId;var q=new mongoose.Types.ObjectId;r.id.push(k,l);r.num.addToSet(3,4,5);assert.equal(5,r.num.length);r.str.addToSet("four","five","two");assert.equal(r.str.length,5);r.id.addToSet(l,n);assert.equal(r.id.length,3);r.doc.addToSet(r.doc[0]);assert.equal(r.doc.length,2);r.doc.addToSet({name:"Waltz",arr:[1]},r.doc[0]);assert.equal(r.doc.length,3);assert.equal(r.date.length,2);r.date.addToSet(a);assert.equal(r.date.length,2);r.date.addToSet(c);assert.equal(r.date.length,3);r.save(function(e){assert.ifError(e);s.findById(r,function(u,v){assert.ifError(u);assert.equal(v.num.length,5);assert.ok(~v.num.indexOf(1));assert.ok(~v.num.indexOf(2));assert.ok(~v.num.indexOf(3));assert.ok(~v.num.indexOf(4));assert.ok(~v.num.indexOf(5));assert.equal(v.str.length,5);assert.ok(~v.str.indexOf("one"));assert.ok(~v.str.indexOf("two"));assert.ok(~v.str.indexOf("tres"));assert.ok(~v.str.indexOf("four"));assert.ok(~v.str.indexOf("five"));assert.equal(v.id.length,3);assert.ok(~v.id.indexOf(k));assert.ok(~v.id.indexOf(l));assert.ok(~v.id.indexOf(n));assert.equal(v.date.length,3);assert.ok(~v.date.indexOf(a.toString()));assert.ok(~v.date.indexOf(b.toString()));assert.ok(~v.date.indexOf(c.toString()));assert.equal(v.doc.length,3);assert.ok(v.doc.some(function(m){return m.name==="Waltz"}));assert.ok(v.doc.some(function(m){return m.name==="Dubstep"}));assert.ok(v.doc.some(function(m){return m.name==="Polka"}));v.num.addToSet(3,4,5,6);assert.equal(v.num.length,6);v.str.addToSet("four","five","two","six");assert.equal(v.str.length,6);v.id.addToSet(l,n,o);assert.equal(v.id.length,4);v.date.addToSet(a,c,d);assert.equal(v.date.length,4);v.doc.addToSet(v.doc[0],{name:"8bit"});assert.equal(v.doc.length,4);v.save(function(m){assert.ifError(m);s.findById(v,function(w,x){assert.ifError(w);assert.equal(x.num.length,6);assert.ok(~x.num.indexOf(1));assert.ok(~x.num.indexOf(2));assert.ok(~x.num.indexOf(3));assert.ok(~x.num.indexOf(4));assert.ok(~x.num.indexOf(5));assert.ok(~x.num.indexOf(6));assert.equal(x.str.length,6);assert.ok(~x.str.indexOf("one"));assert.ok(~x.str.indexOf("two"));assert.ok(~x.str.indexOf("tres"));assert.ok(~x.str.indexOf("four"));assert.ok(~x.str.indexOf("five"));assert.ok(~x.str.indexOf("six"));assert.equal(x.id.length,4);assert.ok(~x.id.indexOf(k));assert.ok(~x.id.indexOf(l));assert.ok(~x.id.indexOf(n));assert.ok(~x.id.indexOf(o));assert.equal(x.date.length,4);assert.ok(~x.date.indexOf(a.toString()));assert.ok(~x.date.indexOf(b.toString()));assert.ok(~x.date.indexOf(c.toString()));assert.ok(~x.date.indexOf(d.toString()));assert.equal(x.doc.length,4);assert.ok(x.doc.some(function(y){return y.name==="Waltz"}));assert.ok(x.doc.some(function(y){return y.name==="Dubstep"}));assert.ok(x.doc.some(function(y){return y.name==="Polka"}));assert.ok(x.doc.some(function(y){return y.name==="8bit"}));x.num.addToSet(7,8);assert.equal(x.num.length,8);x.str.addToSet("seven","eight");assert.equal(x.str.length,8);x.id.addToSet(p,q);assert.equal(x.id.length,6);x.date.addToSet(f,g);assert.equal(x.date.length,6);x.doc.addToSet(x.doc[1],{name:"BigBeat"},{name:"Funk"});assert.equal(x.doc.length,6);x.save(function(y){assert.ifError(y);s.findById(x,function(z,A){h.close();assert.ifError(z);assert.equal(A.num.length,8);assert.ok(~A.num.indexOf(1));assert.ok(~A.num.indexOf(2));assert.ok(~A.num.indexOf(3));assert.ok(~A.num.indexOf(4));assert.ok(~A.num.indexOf(5));assert.ok(~A.num.indexOf(6));assert.ok(~A.num.indexOf(7));assert.ok(~A.num.indexOf(8));assert.equal(A.str.length,8);assert.ok(~A.str.indexOf("one"));assert.ok(~A.str.indexOf("two"));assert.ok(~A.str.indexOf("tres"));assert.ok(~A.str.indexOf("four"));assert.ok(~A.str.indexOf("five"));assert.ok(~A.str.indexOf("six"));assert.ok(~A.str.indexOf("seven"));assert.ok(~A.str.indexOf("eight"));assert.equal(A.id.length,6);assert.ok(~A.id.indexOf(k));assert.ok(~A.id.indexOf(l));assert.ok(~A.id.indexOf(n));assert.ok(~A.id.indexOf(o));assert.ok(~A.id.indexOf(p));assert.ok(~A.id.indexOf(q));assert.equal(A.date.length,6);assert.ok(~A.date.indexOf(a.toString()));assert.ok(~A.date.indexOf(b.toString()));assert.ok(~A.date.indexOf(c.toString()));assert.ok(~A.date.indexOf(d.toString()));assert.ok(~A.date.indexOf(f.toString()));assert.ok(~A.date.indexOf(g.toString()));assert.equal(A.doc.length,6);assert.ok(A.doc.some(function(B){return B.name==="Waltz"}));assert.ok(A.doc.some(function(B){return B.name==="Dubstep"}));assert.ok(A.doc.some(function(B){return B.name==="Polka"}));assert.ok(A.doc.some(function(B){return B.name==="8bit"}));assert.ok(A.doc.some(function(B){return B.name==="BigBeat"}));assert.ok(A.doc.some(function(B){return B.name==="Funk"}));i()})})})})})})})});describe("nonAtomicPush()",function(){it("works",function(b){var a=start();var e=a.model("User");var c=mongoose.Types.ObjectId;var d=new e({name:"banana",pets:[new c]});assert.equal(d.pets.length,1);d.pets.nonAtomicPush(new c);assert.equal(d.pets.length,2);d.save(function(f){assert.ifError(f);e.findById(d._id,function(g){assert.ifError(g);assert.equal(d.pets.length,2);var h=d.pets[0];var i=d.pets[1];var j=new c;d.pets.pull(h);d.pets.nonAtomicPush(j);assert.equal(d.pets.length,2);assert.equal(d.pets[0].toString(),i.toString());assert.equal(d.pets[1].toString(),j.toString());d.save(function(k){assert.ifError(k);e.findById(d._id,function(l){a.close();assert.ifError(l);assert.equal(d.pets.length,2);assert.equal(d.pets[0].toString(),i.toString());assert.equal(d.pets[1].toString(),j.toString());b()})})})})})});describe("sort()",function(){it("order should be saved",function(b){var a=start();var d=a.model("ArraySortOrder",new Schema({x:[Number]}));var c=new d({x:[1,4,3,2]});c.save(function(e){assert.ifError(e);d.findById(c,function(f,g){assert.ifError(f);assert.equal(1,g.x[0]);assert.equal(4,g.x[1]);assert.equal(3,g.x[2]);assert.equal(2,g.x[3]);g.x.sort();g.save(function(h){assert.ifError(h);d.findById(g,function(i,j){assert.ifError(i);assert.equal(1,j.x[0]);assert.equal(2,j.x[1]);assert.equal(3,j.x[2]);assert.equal(4,j.x[3]);j.x.sort(function(k,l){return l>k});j.save(function(k){assert.ifError(k);d.findById(j,function(l,n){assert.ifError(l);assert.equal(4,n.x[0]);assert.equal(3,n.x[1]);assert.equal(2,n.x[2]);assert.equal(1,n.x[3]);b()})})})})})})})});describe("setting a doc array",function(){it("should adjust path positions",function(e){var c=start();var b=c.model("subDocPositions",new Schema({em1:[new Schema({name:String})]}));var a=new b({em1:[{name:"pos0"},{name:"pos1"},{name:"pos2"}]});a.save(function(d){assert.ifError(d);b.findById(a,function(g,f){assert.ifError(g);var h=f.em1.slice();h[2].name="position two";var i=[];i[1]=h[2];i[2]=h[1];i=i.filter(Boolean);f.em1=i;f.save(function(j){assert.ifError(j);b.findById(f,function(l,k){c.close();assert.ifError(l);assert.equal(k.em1[0].name,"position two");assert.equal(k.em1[1].name,"pos1");e()})})})})})});describe("paths with similar names",function(){it("should be saved",function(e){var c=start();var b=c.model("similarPathNames",new Schema({account:{role:String,roles:[String]},em:[new Schema({name:String})]}));var a=new b({account:{role:"teacher",roles:["teacher","admin"]},em:[{name:"bob"}]});a.save(function(d){assert.ifError(d);b.findById(a,function(g,f){assert.ifError(g);f.account.role="president";f.account.roles=["president","janitor"];f.em[0].name="memorable";f.em=[{name:"frida"}];f.save(function(h){assert.ifError(h);b.findById(f,function(j,i){c.close();assert.ifError(j);assert.equal(i.account.role,"president");assert.equal(i.account.roles.length,2);assert.equal(i.account.roles[0],"president");assert.equal(i.account.roles[1],"janitor");assert.equal(i.em.length,1);assert.equal(i.em[0].name,"frida");e()})})})})})});describe("of number",function(){it("allows nulls",function(b){var a=start();var e=new Schema({x:[Number]},{collection:"nullsareallowed"+random()});var d=a.model("nullsareallowed",e);var c;var f=false;c=new d({x:[1,null,3]});c.save(function(g){assert.ifError(g);c=new d({x:[1,undefined,3]});c.save(function(h){a.close();assert.ok(h);b()})})})});it("modifying subdoc props and manipulating the array works (gh-842)",function(b){var a=start();var e=new Schema({em:[new Schema({username:String})]});var d=a.model("modifyingSubDocAndPushing",e);var c=new d({em:[{username:"Arrietty"}]});c.save(function(f){assert.ifError(f);d.findById(c,function(g,h){assert.ifError(g);assert.equal(h.em[0].username,"Arrietty");h.em[0].username="Shawn";h.em.push({username:"Homily"});h.save(function(i){assert.ifError(i);d.findById(h,function(j,k){assert.ifError(j);assert.equal(k.em.length,2);assert.equal(k.em[0].username,"Shawn");assert.equal(k.em[1].username,"Homily");k.em[0].username="Arrietty";k.em[1].remove();k.save(function(l){assert.ifError(l);d.findById(k,function(n,o){a.close();assert.ifError(n);assert.equal(o.em.length,1);assert.equal(o.em[0].username,"Arrietty");b()})})})})})})});describe("default type",function(){it("casts to Mixed",function(){var b=start(),d=new Schema({num1:Array,num2:[]});mongoose.model("DefaultArraySchema",d);var c=b.model("DefaultArraySchema",collection);var a=new c();b.close();assert.equal(a.get("num1").length,0);assert.equal(a.get("num2").length,0);var f=false,g=false;try{a.num1.push({x:1});a.num1.push(9);a.num1.push("woah")}catch(e){f=true}assert.equal(f,false);try{a.num2.push({x:1});a.num2.push(9);a.num2.push("woah")}catch(e){g=true}assert.equal(g,false)})});describe("removing from an array atomically using MongooseArray#remove",function(){it("works",function(c){var b=start(),a=b.model("BlogPost",collection);var d=new a();d.numbers.push(1,2,3);d.save(function(e){assert.ifError(e);a.findById(d._id,function(g,f){assert.ifError(g);f.numbers.remove("1");f.save(function(h){assert.ifError(h);a.findById(d.get("_id"),function(j,i){assert.ifError(j);assert.equal(i.numbers.length,2);i.numbers.remove("2","3");i.save(function(k){assert.ifError(k);a.findById(d._id,function(m,l){b.close();assert.ifError(m);assert.equal(0,l.numbers.length);c()})})})})})})})})});